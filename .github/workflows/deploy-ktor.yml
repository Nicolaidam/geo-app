name: Deploy Ktor Server

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{ github.run_number }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compute FULL_VERSION
        run: |
          SHORT_SHA=${GITHUB_SHA:0:7}
          FULL_VERSION="${BUILD_NUMBER}-${SHORT_SHA}"
          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Build Docker image
        run: |
          docker build -f docker/Dockerfile \
            -t ${{ secrets.DOCKER_USERNAME }}/geo-app-server:${FULL_VERSION} .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/geo-app-server:${FULL_VERSION}

      - name: Deploy to Debian server
        run: |
          sshpass -p "${{ secrets.DEBIAN_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            ${{ secrets.DEBIAN_USER }}@${{ secrets.DEBIAN_IP }} << EOF
            set -e
            cd ~/geo-app
            echo "DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/geo-app-server" > .env
            echo "VERSION=${FULL_VERSION}" >> .env
            docker image prune -af
            docker compose pull
            docker compose up -d --remove-orphans
            docker image prune -f
          EOF

      - name: Create and Push Git Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${FULL_VERSION}" -m "Release ${FULL_VERSION}"
          git push origin "${FULL_VERSION}"

      - name: Create GitHub Release
        run: |
          API_JSON=$(jq -n \
            --arg tag_name "${FULL_VERSION}" \
            --arg name "Release ${FULL_VERSION}" \
            --arg body "ðŸš€ New release of the Ktor server." \
            '{ tag_name: $tag_name, name: $name, body: $body, draft: false, prerelease: false }')

          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$API_JSON" \
            "https://api.github.com/repos/${{ github.repository }}/releases"
